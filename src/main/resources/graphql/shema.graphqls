schema{
    query:Query
}

type Query {
    firstQuery: String!
    fullName(fname: String!, lname: String!): String
    printHeld(heldObj: HeldInput): String
    student(id: Long!): StudentResponse
}

scalar Long
scalar BigDecimal
type SubjectResponse{
    id: Long
    subjectName: String
    marksObtained: BigDecimal
}

type StudentResponse {
    id: Long
    firstName: String
    lastName: String
    fullName: String
    email: String
    street: String
    city: String
    learningSubjects(subjectNameFilter: SubjectNameFilter = ALL): [SubjectResponse]
}

enum SubjectNameFilter{
    ALL, Java, MySQL, MongoDB
}

type Error {
    message: String!
    code: String
}
input FriendInput {
    friendName: String!
}

input HeldInput {
    name: String!
    age: Int
    friends: [FriendInput]
}